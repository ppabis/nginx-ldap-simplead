events {
    worker_connections 1024;
}

http {
    error_log /dev/stderr debug;

    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=auth_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream auth_backend {
        server ldap:8888;
    }

    server {
        listen 80;
        server_name meine.domane.org;

        location /check-auth {
            internal;

            proxy_pass https://auth_backend/check;

            proxy_pass_request_headers off;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";

            proxy_ignore_headers "Set-Cookie";
            proxy_hide_header "Set-Cookie";

            # Cache our auth responses for 10 minutes so that we're not
            # hitting the auth service on every request.
            proxy_cache auth_cache;
            proxy_cache_valid 200 10m;

            proxy_set_header X-Cookie-Name "nginxauth";
            proxy_set_header X-Cookie-Domain "meine.domane.org";
            proxy_set_header Cookie nginxauth=$cookie_nginxauth;
            proxy_cache_key "$http_authorization$cookie_nginxauth";
        }

        location /auth {
            proxy_pass https://auth_backend/auth;
            proxy_set_header X-Cookie-Name "nginxauth";
            proxy_set_header X-Cookie-Domain "meine.domane.org";
            proxy_set_header X-Auth-Realm "Autentifizierung";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            auth_request /check-auth;
            root   /usr/share/nginx/html;
            index  index.html index.htm;

            # If the auth service returns a 401, redirect to the login page.
            error_page 401 =200 /auth/login?service=$request_uri;
        }
    }
}